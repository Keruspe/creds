_creds_complete_stuff() {
    local CREDS_DIR="${XDG_DATA_HOME:-"${HOME}/.local/share"}/creds"
    local stuff

    pushd "${CREDS_DIR}" &>/dev/null

    while read -r -d '' stuff; do
        echo "${stuff/.creds}"
    done < <(find * "${@}" -print0)

    popd &>/dev/null
}

_creds_complete_names() {
    _creds_complete_stuff -type f -name '*.creds'
}

_creds_complete_dirs() {
    _creds_complete_stuff -type d
}

_creds() {
    local cur="${COMP_WORDS[${COMP_CWORD}]}"
    COMPREPLY=()

    case "${COMP_CWORD}" in
        1)
            local opts=( add add-raw cp edit exists find generate get git gpg-ids grep help mv restore rm show tree version )
            COMPREPLY=( $(compgen -W "${opts[*]}" -- "${cur}" ) )
            ;;
        2)
            local action="${COMP_WORDS[1]}"
            local compl=""

            case "${action}" in
                cp|edit|exists|get|mv|rm|show)
                    compl="$(_creds_complete_names)"
                    ;;
                tree)
                    compl="$(_creds_complete_dirs)"
                    ;;
            esac

            [[ -z "${compl}" ]] || COMPREPLY=( $(compgen -W "${compl}" -- "${cur}") )
            ;;
        3)
            local action="${COMP_WORDS[1]}"
            local compl=""

            case "${action}" in
                cp|mv)
                    compl="$(_creds_complete_dirs)"
                    ;;
            esac

            [[ -z "${compl}" ]] || COMPREPLY=( $(compgen -W "${compl}" -- "${cur}") )
            ;;
    esac
}

complete -F _creds creds
